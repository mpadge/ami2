[{"path":"https://briandconnelly.github.io/ami/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ami authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://briandconnelly.github.io/ami/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Connelly. Author, maintainer, copyright holder. Mark Padgham. Contributor.","code":""},{"path":"https://briandconnelly.github.io/ami/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Connelly B (2024). ami: Checks Various Computing Environments. R package version 0.1.0.9000,  https://briandconnelly.github.io/ami/, https://github.com/briandconnelly/ami.","code":"@Manual{,   title = {ami: Checks for Various Computing Environments},   author = {Brian Connelly},   year = {2024},   note = {R package version 0.1.0.9000,  https://briandconnelly.github.io/ami/},   url = {https://github.com/briandconnelly/ami}, }"},{"path":"https://briandconnelly.github.io/ami/index.html","id":"ami","dir":"","previous_headings":"","what":"Checks for Various Computing Environments","title":"Checks for Various Computing Environments","text":"ami (“?”) provides unified collection lightweight checks can used better understand environments code running. includes different operating systems, Continuous Integration (CI) environments, containers, . Similar identical functions already exist. However, functions exist within highly specialized packages, using several can quickly create lot dependencies projects.","code":""},{"path":"https://briandconnelly.github.io/ami/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Checks for Various Computing Environments","text":"can install latest released version ami running: ’d like try development version ami, can install directly GitHub:","code":"install.packages(\"ami\") # install.packages(\"remotes\") remotes::install_github(\"briandconnelly/ami\")"},{"path":[]},{"path":"https://briandconnelly.github.io/ami/index.html","id":"am-i-online","dir":"","previous_headings":"Some Examples","what":"Am I online?","title":"Checks for Various Computing Environments","text":"","code":"ami::online() #> [1] TRUE"},{"path":"https://briandconnelly.github.io/ami/index.html","id":"am-i-using-rstudio-am-i-using-a-dark-theme","dir":"","previous_headings":"Some Examples","what":"Am I using RStudio? Am I using a dark theme?","title":"Checks for Various Computing Environments","text":"","code":"ami::using_rstudio() #> [1] FALSE  ami::using_rstudio_dark_theme() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/index.html","id":"am-i-using-macos-and-an-intel-mac","dir":"","previous_headings":"Some Examples","what":"Am I using macOS and an Intel Mac?","title":"Checks for Various Computing Environments","text":"","code":"ami::using_macos() && ami::using_x86_cpu() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/index.html","id":"are-we-running-in-a-docker-container","dir":"","previous_headings":"Some Examples","what":"Are we running in a Docker container?","title":"Checks for Various Computing Environments","text":"","code":"ami::using_docker_container() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/index.html","id":"are-we-using-a-continuous-integration-service-github-actions","dir":"","previous_headings":"Some Examples","what":"Are we using a continuous integration service? GitHub Actions?","title":"Checks for Various Computing Environments","text":"","code":"ami::using_ci() #> [1] FALSE  ami::using_github_actions() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/index.html","id":"other-environments","dir":"","previous_headings":"Some Examples","what":"Other environments","title":"Checks for Various Computing Environments","text":"ami can used check environment variable. example, can see ’re running Poetry environment: can also check package options. , ’ll see whether boot configured parallel bootstrapping using multiple cores: ’re using options part package development, check options package.","code":"ami::using_envvar(\"POETRY_ACTIVE\") #> [1] FALSE ami::using_option(\"boot.parallel\", \"multicore\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/account.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether a given user account is being used — using_account","title":"Determine whether a given user account is being used — using_account","text":"Determine whether given user account used","code":""},{"path":"https://briandconnelly.github.io/ami/reference/account.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether a given user account is being used — using_account","text":"","code":"using_account(username)"},{"path":"https://briandconnelly.github.io/ami/reference/account.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether a given user account is being used — using_account","text":"username Username check ","code":""},{"path":"https://briandconnelly.github.io/ami/reference/account.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether a given user account is being used — using_account","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/account.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether a given user account is being used — using_account","text":"","code":"using_account(\"root\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/ami-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ami: Checks for Various Computing Environments — ami-package","title":"ami: Checks for Various Computing Environments — ami-package","text":"collection lightweight functions can used determine computing environment code running. includes operating systems, continuous integration (CI) environments, containers, .","code":""},{"path":[]},{"path":"https://briandconnelly.github.io/ami/reference/ami-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ami: Checks for Various Computing Environments — ami-package","text":"Maintainer: Brian Connelly bdc@bconnelly.net (ORCID) [copyright holder] contributors: Mark Padgham mark.padgham@email.com (ORCID) [contributor]","code":""},{"path":"https://briandconnelly.github.io/ami/reference/bioconductor.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Bioconductor — on_bioconductor","title":"Detect Bioconductor — on_bioconductor","text":"Detect Bioconductor","code":""},{"path":"https://briandconnelly.github.io/ami/reference/bioconductor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Bioconductor — on_bioconductor","text":"","code":"on_bioconductor()"},{"path":"https://briandconnelly.github.io/ami/reference/bioconductor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Bioconductor — on_bioconductor","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/bioconductor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Bioconductor — on_bioconductor","text":"","code":"on_bioconductor() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether running in a CI environment — using_ci","title":"Detect whether running in a CI environment — using_ci","text":"using_ci() reports whether continuous integration environment used. using_appveyor() reports whether AppVeyor used using_circle_ci() reports whether CircleCI used using_codebuild() reports whether AWS CodeBuild used using_github_actions() reports whether GitHub Actions used using_gitlab_ci() reports whether GitLab CI/CD used using_jenkins() reports whether Jenkins used using_travis_ci() reports whether Travis CI used","code":""},{"path":"https://briandconnelly.github.io/ami/reference/ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether running in a CI environment — using_ci","text":"","code":"using_ci(service = NULL)  using_appveyor()  using_circle_ci()  using_codebuild()  using_github_actions()  using_gitlab_ci()  using_jenkins()  using_travis_ci()"},{"path":"https://briandconnelly.github.io/ami/reference/ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect whether running in a CI environment — using_ci","text":"service provided, particular CI service checked. , commonly-used CI environment variable checked.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether running in a CI environment — using_ci","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether running in a CI environment — using_ci","text":"","code":"using_ci() #> [1] TRUE using_appveyor() #> [1] FALSE using_circle_ci() #> [1] FALSE using_codebuild() #> [1] FALSE using_github_actions() #> [1] TRUE using_gitlab_ci() #> [1] FALSE using_jenkins() #> [1] FALSE using_travis_ci() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/conda.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether Conda environment is being used — using_conda","title":"Determine whether Conda environment is being used — using_conda","text":"Determine whether Conda environment used","code":""},{"path":"https://briandconnelly.github.io/ami/reference/conda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether Conda environment is being used — using_conda","text":"","code":"using_conda(env = NULL)"},{"path":"https://briandconnelly.github.io/ami/reference/conda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether Conda environment is being used — using_conda","text":"env Optional environment name compare ","code":""},{"path":"https://briandconnelly.github.io/ami/reference/conda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether Conda environment is being used — using_conda","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/conda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether Conda environment is being used — using_conda","text":"","code":"# Check if Conda is being used (regardless of environment name) using_conda() #> [1] FALSE  # Check if the 'dev' Conda environment is being used using_conda(env = \"dev\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/config.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether a configuration is currently active — using_config","title":"Detect whether a configuration is currently active — using_config","text":"Environment-specific configuration values can used alter code's behavior different environments. config package uses R_CONFIG_ACTIVE environment variable specify active environment. R_CONFIG_ACTIVE set, \"default\" configuration used.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether a configuration is currently active — using_config","text":"","code":"using_config(config)"},{"path":"https://briandconnelly.github.io/ami/reference/config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect whether a configuration is currently active — using_config","text":"config Configuration name","code":""},{"path":"https://briandconnelly.github.io/ami/reference/config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether a configuration is currently active — using_config","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether a configuration is currently active — using_config","text":"","code":"# See whether the default configuration is being used using_config(\"default\") #> [1] TRUE  # See whether the \"production\" configuration is being used using_config(\"production\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/container.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect container environments — using_container","title":"Detect container environments — using_container","text":"Detect container environments","code":""},{"path":"https://briandconnelly.github.io/ami/reference/container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect container environments — using_container","text":"","code":"using_container()  using_docker_container()  using_podman_container()  using_kubernetes()"},{"path":"https://briandconnelly.github.io/ami/reference/container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect container environments — using_container","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/container.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect container environments — using_container","text":"","code":"using_container() #> [1] FALSE using_docker_container() #> [1] FALSE using_podman_container() #> [1] FALSE using_kubernetes() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/covr.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect covr — using_covr","title":"Detect covr — using_covr","text":"Detect covr","code":""},{"path":"https://briandconnelly.github.io/ami/reference/covr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect covr — using_covr","text":"","code":"using_covr()"},{"path":"https://briandconnelly.github.io/ami/reference/covr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect covr — using_covr","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/covr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect covr — using_covr","text":"","code":"using_covr() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/cpu.html","id":null,"dir":"Reference","previous_headings":"","what":"Processor Checks — using_cpu","title":"Processor Checks — using_cpu","text":"using_cpu() checks whether machine uses given type processor . using_x86_cpu() checks whether machine uses x86 processor using_arm_cpu() checks whether machine uses ARM-based processor","code":""},{"path":"https://briandconnelly.github.io/ami/reference/cpu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processor Checks — using_cpu","text":"","code":"using_cpu(arch = c(\"arm\", \"x86\"))  using_x86_cpu()  using_arm_cpu()"},{"path":"https://briandconnelly.github.io/ami/reference/cpu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processor Checks — using_cpu","text":"arch CPU architecture name. Either \"arm\" \"x86\".","code":""},{"path":"https://briandconnelly.github.io/ami/reference/cpu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processor Checks — using_cpu","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/cpu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Processor Checks — using_cpu","text":"","code":"using_arm_cpu() #> [1] FALSE using_x86_cpu() #> [1] TRUE using_arm_cpu() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/cran.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect CRAN — on_cran","title":"Detect CRAN — on_cran","text":"function detects whether current R environment CRAN machine . returns FALSE NOT_CRAN environment variable used \"github/r-lib\" packages like devtools testthat set \"true\". variable set, function examines environment variables typically set CRAN machines, documented issue packages' GitHub repository https://github.com/briandconnelly/ami/issues/14.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect CRAN — on_cran","text":"","code":"on_cran(cran_pattern = \"_R_\", n_cran_envvars = 5L)"},{"path":"https://briandconnelly.github.io/ami/reference/cran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect CRAN — on_cran","text":"cran_pattern String match environment variables. n_cran_envvars least number environment variables match cran_pattern, on_cran() returns TRUE.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/cran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect CRAN — on_cran","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/cran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect CRAN — on_cran","text":"","code":"on_cran() #> [1] FALSE withr::with_envvar (   list (\"NOT_CRAN\" = \"false\", \"_R_1\" = 1, \"_R_2\" = 2),   on_cran(n_cran_envvars = 2L) ) #> [1] TRUE"},{"path":"https://briandconnelly.github.io/ami/reference/databricks.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Databricks Runtime Environment — using_databricks","title":"Detect Databricks Runtime Environment — using_databricks","text":"Detect Databricks Runtime Environment","code":""},{"path":"https://briandconnelly.github.io/ami/reference/databricks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Databricks Runtime Environment — using_databricks","text":"","code":"using_databricks()"},{"path":"https://briandconnelly.github.io/ami/reference/databricks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Databricks Runtime Environment — using_databricks","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/databricks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Databricks Runtime Environment — using_databricks","text":"","code":"using_databricks() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/networking.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks related to networking — online","title":"Checks related to networking — online","text":"online() uses curl::has_internet check whether machine connected internet","code":""},{"path":"https://briandconnelly.github.io/ami/reference/networking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks related to networking — online","text":"","code":"online()  using_host(hostname)"},{"path":"https://briandconnelly.github.io/ami/reference/networking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks related to networking — online","text":"hostname String containing hostname hostnames check","code":""},{"path":"https://briandconnelly.github.io/ami/reference/networking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks related to networking — online","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/networking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks related to networking — online","text":"","code":"online() #> [1] TRUE using_host(\"somehost.fakedomain.com\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/nix.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Nix Shell — using_nix_shell","title":"Detect Nix Shell — using_nix_shell","text":"using_nix_shell() checks whether code running within environment defined Nix expression.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/nix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Nix Shell — using_nix_shell","text":"","code":"using_nix_shell(pure = NULL)"},{"path":"https://briandconnelly.github.io/ami/reference/nix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Nix Shell — using_nix_shell","text":"pure Whether environment pure, meaning environment variables cleared shell started.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/nix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Nix Shell — using_nix_shell","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/nix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Nix Shell — using_nix_shell","text":"","code":"# Check for Nix using_nix_shell() #> [1] FALSE  # Check for Nix in a pure environment using_nix_shell(pure = TRUE) #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/option.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether a global option is being used — using_option","title":"Determine whether a global option is being used — using_option","text":"Determine whether global option used","code":""},{"path":"https://briandconnelly.github.io/ami/reference/option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether a global option is being used — using_option","text":"","code":"using_option(x, value = NULL)"},{"path":"https://briandconnelly.github.io/ami/reference/option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether a global option is being used — using_option","text":"x Option name value Optional value compare ","code":""},{"path":"https://briandconnelly.github.io/ami/reference/option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether a global option is being used — using_option","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether a global option is being used — using_option","text":"","code":"using_option(\"width\") #> [1] TRUE  using_option(\"boot.parallel\", value = \"multicore\") #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/os.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests for operating systems — using_os","title":"Tests for operating systems — using_os","text":"Tests operating systems","code":""},{"path":"https://briandconnelly.github.io/ami/reference/os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests for operating systems — using_os","text":"","code":"using_os(os = c(\"linux\", \"macos\", \"solaris\", \"windows\"))  using_linux()  using_macos()  using_solaris()  using_windows()"},{"path":"https://briandconnelly.github.io/ami/reference/os.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests for operating systems — using_os","text":"os Operating system name. One \"linux\", \"macos\", \"solaris\", \"windows\"","code":""},{"path":"https://briandconnelly.github.io/ami/reference/os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests for operating systems — using_os","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/os.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests for operating systems — using_os","text":"","code":"using_os(os = \"linux\") #> [1] TRUE using_linux() #> [1] TRUE using_macos() #> [1] FALSE using_solaris() #> [1] FALSE using_windows() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/r.html","id":null,"dir":"Reference","previous_headings":"","what":"R session information — using_r_version","title":"R session information — using_r_version","text":"Get information R environment used. using_r_version() determines whether particular version R used. using_latest_r_version() determines whether latest stable version R used. using_interactive_session() determines whether R run interactively.","code":""},{"path":"https://briandconnelly.github.io/ami/reference/r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R session information — using_r_version","text":"","code":"using_r_version(ver)  using_latest_r_version()  using_interactive_session()"},{"path":"https://briandconnelly.github.io/ami/reference/r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R session information — using_r_version","text":"ver Version string","code":""},{"path":"https://briandconnelly.github.io/ami/reference/r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R session information — using_r_version","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R session information — using_r_version","text":"","code":"using_r_version(ver = \"4.3.0\") #> [1] FALSE using_latest_r_version() #> [1] TRUE using_interactive_session() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/rstudio.html","id":null,"dir":"Reference","previous_headings":"","what":"RStudio environments — using_rstudio","title":"RStudio environments — using_rstudio","text":"functions enable determine whether code run presence various features RStudio IDE Posit products. using_rstudio() determines whether code run RStudio using_rstudio_jobs() determines whether code running RStudio Job using_rstudio_dark_theme() determines whether dark theme used using_posit_connect() checks whether Posit Connect used","code":""},{"path":"https://briandconnelly.github.io/ami/reference/rstudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RStudio environments — using_rstudio","text":"","code":"using_rstudio()  using_rstudio_jobs()  using_rstudio_dark_theme()  using_posit_connect()"},{"path":"https://briandconnelly.github.io/ami/reference/rstudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RStudio environments — using_rstudio","text":"logical value","code":""},{"path":[]},{"path":"https://briandconnelly.github.io/ami/reference/rstudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RStudio environments — using_rstudio","text":"","code":"using_rstudio() #> [1] FALSE using_rstudio_jobs() #> [1] FALSE using_rstudio_dark_theme() #> [1] FALSE using_posit_connect() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect testthat — using_testthat","title":"Detect testthat — using_testthat","text":"Detect testthat","code":""},{"path":"https://briandconnelly.github.io/ami/reference/testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect testthat — using_testthat","text":"","code":"using_testthat()"},{"path":"https://briandconnelly.github.io/ami/reference/testthat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect testthat — using_testthat","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/testthat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect testthat — using_testthat","text":"","code":"using_testthat() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/reference/using_envvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether an environment variable is being used — using_envvar","title":"Determine whether an environment variable is being used — using_envvar","text":"Determine whether environment variable used","code":""},{"path":"https://briandconnelly.github.io/ami/reference/using_envvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether an environment variable is being used — using_envvar","text":"","code":"using_envvar(x, value = NULL)"},{"path":"https://briandconnelly.github.io/ami/reference/using_envvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether an environment variable is being used — using_envvar","text":"x Environment variable value Optional value compare ","code":""},{"path":"https://briandconnelly.github.io/ami/reference/using_envvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether an environment variable is being used — using_envvar","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/using_envvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether an environment variable is being used — using_envvar","text":"","code":"using_envvar(\"NOT_CRAN\") #> [1] TRUE  using_envvar(\"CI\", \"true\") #> [1] TRUE"},{"path":"https://briandconnelly.github.io/ami/reference/vscode.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether code is running in Visual Studio Code — using_vscode","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"Detect whether code running Visual Studio Code","code":""},{"path":"https://briandconnelly.github.io/ami/reference/vscode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"","code":"using_vscode()"},{"path":"https://briandconnelly.github.io/ami/reference/vscode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/ami/reference/vscode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether code is running in Visual Studio Code — using_vscode","text":"","code":"using_vscode() #> [1] FALSE"},{"path":"https://briandconnelly.github.io/ami/news/index.html","id":"ami-0109000","dir":"Changelog","previous_headings":"","what":"ami 0.1.0.9000","title":"ami 0.1.0.9000","text":"Added using_nix_shell() detecting Nix shell environments","code":""},{"path":"https://briandconnelly.github.io/ami/news/index.html","id":"ami-010","dir":"Changelog","previous_headings":"","what":"ami 0.1.0","title":"ami 0.1.0","text":"CRAN release: 2023-06-06 Initial public release Added NEWS.md file track changes package.","code":""}]
